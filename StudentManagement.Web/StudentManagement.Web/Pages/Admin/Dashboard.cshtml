@page
@model StudentManagement.Web.Pages.Admin.DashboardModel
@{
    ViewData["Title"] = "Dashboard";
    Layout = "_DashboardLayout";
}

<style>
    /* Global */
    .dashboard-container {
        padding: 25px;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .dashboard-title {
        font-size: 26px;
        font-weight: 600;
        margin-bottom: 25px;
        text-align: center;
        background: linear-gradient(45deg, #2563eb, #3b82f6);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        letter-spacing: 1px;
    }

    /* Cards Grid */
    .cards-container {
        display: flex;
        flex-wrap: wrap;
        gap: 25px;
        justify-content: center;
        margin-bottom: 40px;
    }

    .card {
        display: flex;
        align-items: center;
        gap: 15px;
        border-radius: 18px;
        padding: 20px;
        width: 240px;
        background: linear-gradient(135deg, #f9f9f9, #ffffff);
        box-shadow: 0 6px 14px rgba(0,0,0,0.1);
        transition: all 0.3s ease-in-out;
        cursor: pointer;
    }

        .card:hover {
            transform: translateY(-6px) scale(1.02);
            box-shadow: 0 12px 20px rgba(0,0,0,0.15);
        }

        .card .icon {
            font-size: 30px;
            border-radius: 50%;
            padding: 12px;
            background: linear-gradient(135deg, #2563eb, #3b82f6);
            color: #fff;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .card .details .label {
            font-size: 14px;
            color: #555;
            margin: 0;
        }

        .card .details h2 {
            font-size: 24px;
            margin: 0;
            font-weight: bold;
            color: #1e293b;
        }

        /* Unique gradients for cards */
        .card.student .icon {
            background: linear-gradient(135deg, #2563eb, #60a5fa);
        }

        .card.course .icon {
            background: linear-gradient(135deg, #10b981, #34d399);
        }

    /* Clock + Calendar */
    .time-calendar {
        display: flex;
        justify-content: center;
        gap: 40px;
        margin-top: 35px;
        flex-wrap: wrap;
    }

    .clock, .calendar {
        background: linear-gradient(135deg, #f9f9f9, #ffffff);
        border-radius: 18px;
        padding: 25px 35px;
        box-shadow: 0 6px 14px rgba(0,0,0,0.1);
        text-align: center;
        font-weight: 600;
        color: #1e293b;
        min-width: 200px;
    }

    .clock {
        font-size: 28px;
        letter-spacing: 2px;
        background: linear-gradient(135deg, #2563eb, #3b82f6);
        color: white;
    }

    .calendar {
        font-size: 20px;
        background: linear-gradient(135deg, #10b981, #34d399);
        color: white;
    }
</style>

<div class="dashboard-container">
    <h1 class="dashboard-title"> Dashboard Overview</h1>

    <div class="cards-container">

        <div class="card student">
            <div class="icon"><i class="fas fa-user-graduate"></i></div>
            <div class="details">
                <p class="label">Students</p>
                <h2>@Model.TotalStudents</h2>
            </div>
        </div>

        <div class="card course">
            <div class="icon"><i class="fas fa-book-open"></i></div>
            <div class="details">
                <p class="label">Courses</p>
                <h2>@Model.TotalCourses</h2>
            </div>
        </div>

    </div>

    <!-- Clock and Calendar Section -->
    <div class="time-calendar">
        <div class="clock" id="clock">--:--:--</div>
        <div class="calendar" id="calendar">-- --, ----</div>
    </div>
</div>

@section Scripts {
    <script src="https://kit.fontawesome.com/your-fontawesome-kit.js" crossorigin="anonymous"></script>
    <script>
        function updateClockAndCalendar() {
            const now = new Date();

            // Clock
            const hours = String(now.getHours()).padStart(2, '0');
            const minutes = String(now.getMinutes()).padStart(2, '0');
            const seconds = String(now.getSeconds()).padStart(2, '0');
            document.getElementById("clock").innerText = `${hours}:${minutes}:${seconds}`;

            // Calendar
            const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
            document.getElementById("calendar").innerText = now.toLocaleDateString('en-US', options);
        }

        setInterval(updateClockAndCalendar, 1000);
        updateClockAndCalendar();
    </script>
}
